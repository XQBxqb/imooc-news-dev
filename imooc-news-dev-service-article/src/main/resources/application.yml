server:
  tomcat:
    uri-encoding: UTF-8
    max-swallow-size: -1
  port: 7001
spring:
  profiles:
    active: dev
  application:
    name: service-article
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  data:
    mongodb:
      database: imooc-news
      uri: mongodb://root:ab215687DA.@192.168.98.103:27017
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/imooc-news-dev?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
    username: root
    password: 123
    hikari:
      connection-timeout: 30000       # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:30秒
      minimum-idle: 5                 # 最小连接数
      maximum-pool-size: 20           # 最大连接数
      auto-commit: true               # 自动提交
      idle-timeout: 600000            # 连接超时的最大时长（毫秒），超时则被释放（retired），默认:10分钟
      pool-name: DateSourceHikariCP     # 连接池名字
      max-lifetime: 1800000           # 连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟 1800000ms
  freemarker:
    suffix: .ftl
    charset: utf-8
    content-type: text/html
    template-loader-path: classpath:/templates/

  rabbitmq:
    host: 192.168.98.105
    port: 5672
    username: root
    password: ab215687DA.
    virtual-host: imooc-news-dev
ribbon:
  ConnectTimeout: 5000
  ReadTimeout: 5000
  MaxAutoRetries: 1
  MaxAutoRetriesNextServer: 2

mybatis:
  type-aliases-package: com.imooc.pojo
  mapper-locations: classpath:/mapper/*.xml
#    database: 0 # Redis数据库索引（默认为0）
#    port: 6379
#    password: 123456
#    timeout: 0 # 连接超时时间（毫秒）
#      host:
#      jedis:
#        pool:
#          max-idle:
freemarker:
  html:
    article: \D:\apache-tomcat-8.5\apache-tomcat-8.5.87\webapps\imooc-news\portal\a
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://eureka-cluster-8001:8001/eureka/,http://eureka-cluster-8002:8002/eureka/,http://eureka-cluster-8003:8003/eureka/


RabbitMQ:
  SERVER:
    USER: SERVICE-USER

SERVER-USER:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
